const dotenv = require('dotenv');
dotenv.config();

const express = require('express');
const bodyParser = require('body-parser');
const passport = require('passport');
const session = require('express-session');
const cors = require('cors');
const MongoStore = require('connect-mongo');

const authRoutes = require('./routes/auth');
const cartRoutes = require('./routes/cart');
const checkoutRoutes = require('./routes/checkout');
const ordersRoutes = require('./routes/orders');


if(!process.env.SESSION_TICKET || !process.env.PORT) {
    console.error('Missing required environment variables in .env');
    process.exit(1);
}

mongoose.connect(process.env.MONGODB_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
})
.then(() => console.log('Connected to MongoDB'))
.catch(err => console.error('MongoDB connection error:', err));

require('./routes/passport-setup');

const app = express();
app.use(bodyParser.json());

const corsOptions = {
    origin: process.env.FRONTEND_URL,
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
    credentials: true,
};

app.use(cors(corsOptions));

app.use(session({
    secret: process.env.SESSION_TICKET,
    resave: false,
    saveUninitialized: false,
    store: MongoStore.create({ mongoUrl: process.env.MONGODB_URI }),
    cookie: {
        secure: process.env.NODE_ENV === 'production',
    }
}));


//Using passport

app.use(passport.initialize());
app.use(passport.session());

//Routes

app.use('/api', authRoutes);
app.use('/api/cart', cartRoutes);
app.use('/checkout', checkoutRoutes);
app.use('/api/orders', ordersRoutes);

//Error handler

app.use((err, req, res, next) => {
    console.error('Global error handler caught error:', err);
    res.status(500).json({ error: 'Server error'});
})


//Start server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on PORT ${PORT}`));